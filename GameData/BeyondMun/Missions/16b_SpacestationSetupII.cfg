// This contract shows all the different parameters that can be used.
CONTRACT_TYPE
{
    name = BMSpaceStationSetupII

    // Contract text
    title = [BM] Space Station's Habitat Module "Hostel"
    description = Our second module will be the habitat for up to 3 kerbonauts. There should be enough oxygen, food and water to keep your astronauts well fed for about half a year. You may need to add more solar panels to keep the energy balance positive. It is also required to add an additional docking ring to allow crew exchanges. Keep in mind that two more modules will be added to the station hub. The new docking ring should still be accessible as soon as the station is complete. Due the short test time on Kerbal we are not 100% sure that the space station is properly airtight. We want to conduct a testrun without Kerbals.
    synopsis =  We want to live in space!
	notes = TIP: 
    completedMessage = You created a nice livingroom in space, we wish our kerbonauts a lot of fun!

    // Controls for whether a contract can be declined or cancelled, default is true for both
    cancellable = true
    declinable = true

    // Target Celestial body - controls where the contract must be completed, has some automated
    // effects on numeric parameters (increasing science, etc.)
    targetBody = Kerbin

    // Contract rewards
    rewardScience = 55.0
	rewardReputation = 75.0
    rewardFunds = 75000.0
	
	// Can only be done once
	maxCompletions = 1
	maxSimultaneous = 1
	
	prestige = Significant
		
	agent = Integrated Integrals
	
	PARAMETER
	{
		name = VesselParameterGroup1
		type = VesselParameterGroup
		
		define = Hostel
			
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity
			
			minCapacity = 3
		}
		
		PARAMETER
		{
			name = PartValidation1
			type = PartValidation
			
			partModule = ModuleDockingNode
			minCount = 2
			
			title = Add an additional docking node for crew transfer.
		}
		
		PARAMETER:NEEDS[TacLifeSupport]
		{
			name = HasResource
			type = HasResource

			// The name of the resource to check for
			resource = Water
			minQuantity = 150.0
		}
		
		PARAMETER:NEEDS[TacLifeSupport]
		{
			name = HasResource
			type = HasResource

			// The name of the resource to check for
			resource = Food
			minQuantity = 250.0
		}

		PARAMETER:NEEDS[TacLifeSupport]
		{
			name = HasResource
			type = HasResource

			// The name of the resource to check for
			resource = Oxygen
			minQuantity = 25000.0
		}
		
		PARAMETER
		{
			name = ReachState
			type = ReachState

			situation = PRELAUNCH
		}
	}
	
	PARAMETER
	{
		name = VesselParameterGroup1
		type = VesselParameterGroup
		
		vessel = Hostel
		
		PARAMETER
		{
			name = Orbit1
			type = Orbit

			minAltitude = 130000
			maxAltitude = 180000
			
			title = Enter a stable orbit around Kerbin.		
		}			
		
		PARAMETER
		{
			name = Docking
			type = Docking

			vessel = Kerbalnation Spacestation

			defineDockedVessel = Kerbalnation Spacestation

			title = Dock the module "Hostel" with the space station.
		}
		
		PARAMETER:NEEDS[RemoteTech]
		{
			name = KSCConnectivity
			type = KSCConnectivity

			hasConnectivity = true
		}
		
		PARAMETER
		{
			name = HasCrew1
			type = HasCrew
			maxCrew = 0
			minCrew = 0
		}		
	}
	
	REQUIREMENT 
	{
		name = CompleteContract1
		type = CompleteContract
		contractType = BMSpaceStationSetupI
		minCount = 1		
	}
}